{"version":3,"sources":["components/Navbar/Navbar.js","components/MyStocks/MyStocks.js","components/AddStocks/AddStockButtons/AddStockButton/AddStockButton.js","components/AddStocks/AddStockButtons/AddStockButtons.js","components/AddStocks/AddStocks.js","common/HorizontalLine/HorizontalLine.js","common/Backdrop/Backdrop.js","common/Modal/Modal.js","pages/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","className","title","MyStocks","state","myStocks","isError","shouldComponentUpdate","nextProps","nextState","isEqual","createRows","rows","Object","keys","map","row","dataRow","symbol","Axios","get","then","response","console","log","serverData","data","today","Date","dayCounter","getDay","year","getFullYear","month","parseInt","getMonth","date","getDate","finalDate","undefined","toString","getTimezoneOffset","currentClosingPrice","calculateProfit","closingPrice","numberOfShares","setState","catch","error","this","length","stock","stockData","key","name","onClick","stopTracking","id","Component","AddStockButton","clicked","AddStockButtons","allStocksData","buttons","allStocks","addStock","AddStocks","newAllStocksHandler","newStocks","newAllStocks","newMyStocks","HorizontalLine","Backdrop","style","Modal","close","height","textAlign","position","backgroundColor","zIndex","left","top","boxSizing","width","overflowY","content","Main","showModal","selectedStock","dateError","dateErrorMsg","formComplete","formIncompleteError","addStockHandler","modalCloseHandler","addStockToDBHandler","BuyingPrice","current","value","BuyingDate","NoOfShares","post","push","put","dateHandler","event","target","getTime","stopTrackingHandler","newAllStocksValue","React","createRef","modalContent","Fragment","type","min","placeholder","ref","onChange","disabled","weekendWarning","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a09c8d4.chunk.js","sourcesContent":["import React from 'react';\nimport './Navbar.css';\n\nconst Navbar = (props) => {\n    return (\n        <div className='Navbar'>\n            <span className='NavbarTitle'>{props.title}</span>\n        </div>\n    )\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport './MyStocks.css';\nimport Axios from 'axios';\nimport { isEqual } from 'lodash';\n\nclass MyStocks extends Component {\n    state = {\n        myStocks: {},\n        isError: false\n    }\n\n    shouldComponentUpdate = (nextProps, nextState) => {\n        return isEqual(nextState, this.state)\n    }\n\n    createRows = () => {\n        let rows = {};\n        Object.keys(this.props.myStocks).map(row => {\n            let dataRow = this.props.myStocks[row];\n            rows[dataRow.symbol] = {...dataRow};\n            Axios.get('https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol='+dataRow.symbol+'&outputsize=compact&apikey=6X6YP8313WMG8Y86')\n                .then(response => {\n                    console.log(response);\n                    let serverData = response.data[\"Time Series (Daily)\"];\n                    let today = new Date();\n                    let dayCounter = 0;\n                    if(today.getDay() === 0) { dayCounter = 2; }\n                    if(today.getDay() === 6) { dayCounter = 1; }\n                    let year = today.getFullYear();\n                    let month = parseInt(today.getMonth())+ 1;\n                    let date = parseInt(today.getDate()-dayCounter)<10 ? '0'+parseInt(today.getDate()-dayCounter) : parseInt(today.getDate()-dayCounter);\n                    let finalDate = year+'-'+month+'-'+date;\n                    if(serverData[finalDate.toString()] === undefined){\n                        if(new Date().getTimezoneOffset() && new Date().getDay() === 1) {\n                            finalDate = year+'-'+month+'-'+(date-3);\n                        } else {\n                            finalDate = year+'-'+month+'-'+(date-1);\n                        }\n                    }\n                    let todayStocks = serverData[finalDate.toString()];\n                    let currentClosingPrice = todayStocks[\"4. close\"];\n                    let calculateProfit = parseInt([currentClosingPrice - dataRow.closingPrice] * dataRow.numberOfShares);\n                    rows[dataRow.symbol].currentClosingPrice = currentClosingPrice;\n                    rows[dataRow.symbol].calculateProfit = calculateProfit;\n                    this.setState({myStocks: rows})\n                })\n                .catch(error => {\n                    console.log(error);\n                    this.setState({\n                        isError: true\n                    })\n                });\n            return true;\n        })\n    }\n\n    render() {\n        if(Object.keys(this.props.myStocks).length > 0 && Object.keys(this.props.myStocks).length !== Object.keys(this.state.myStocks).length && this.state.isError === false) {\n            this.createRows();\n        }\n        let rows = Object.keys(this.state.myStocks).map(stock => {\n            let stockData = this.state.myStocks[stock];\n            let stockRow = (\n                <tr key={stockData.symbol}>\n                    <td>{stockData.symbol}</td>\n                    <td>{stockData.name}</td>\n                    <td>{stockData.numberOfShares}</td>\n                    <td>{stockData.closingPrice}</td>\n                    <td>{stockData.currentClosingPrice}</td>\n                    <td>{stockData.calculateProfit}</td>\n                    <td><button className='StopTrackingBtn' onClick={() => this.props.stopTracking(stockData.symbol)}>Stop Tracking</button></td>\n                </tr>\n            )\n            return stockRow;\n        })\n        return (\n            <div className='MyStocks'>\n                <div className='Header'>\n                    <span className='MyStocksTitle'>My Stocks</span>\n                    {/* <input type='text' className='SearchBar' placeholder='Search...' /> */}\n                </div>\n                <div className='Body'>\n                    {\n                        this.state.isError ?\n                        <p>There seems to be a server issue, please try again later.</p> :\n                        <table id='MyStocksTable' className='MyStocksTable'>\n                            <thead>\n                                <tr>\n                                    <th>Stock symbol</th>\n                                    <th>Stock name</th>\n                                    <th>No.of shares</th>\n                                    <th>Buy price</th>\n                                    <th>Current price</th>\n                                    <th>Profit/Loss</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {rows}\n                            </tbody>\n                        </table>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MyStocks;","import React from 'react';\nimport './AddStockButton.css';\n\nconst AddStockButton = (props) => {\n    console.log(props);\n    return (\n        <div className='AddStockButton'>\n            <button className='StockButton' onClick={() => props.clicked(props.stock)}>{props.stock.symbol}</button>\n            {props.stock.name}\n        </div>\n    )\n}\n\nexport default AddStockButton;","import React, { Component } from 'react';\nimport './AddStockButtons.css';\n\nimport AddStockButton from './AddStockButton/AddStockButton';\n\nclass AddStockButtons extends Component {\n    state = {\n        allStocksData: {}\n    }\n    \n    render() {\n        let buttons = this.props.allStocks.map(stock => {\n            return <AddStockButton key={stock.symbol} stock={stock} clicked={(stock) => this.props.addStock(stock)} />\n        })\n\n        return (\n            <div className='AddStockButtons'>\n                {buttons}\n            </div>\n        )\n    }\n}\n\nexport default AddStockButtons;\n","import React, { Component } from 'react';\nimport './AddStocks.css';\n\nimport AddStockButtons from './AddStockButtons/AddStockButtons';\n\nclass AddStocks extends Component {\n    newAllStocksHandler = (newStocks) => {\n        this.setState({\n            allStocks: newStocks\n        })\n    }\n\n    render() {\n        return (\n            <div className='AddStocks'>\n                <div className='AddStocksTitle'>Add stocks to my stocks</div>\n                {\n                    this.props.error &&\n                    <p>{this.props.error}</p>\n                }\n                {\n                    this.props.allStocks && this.props.allStocks.length > 0 &&\n                    <AddStockButtons \n                        addStock = {(stock) => this.props.addStock(stock)}\n                        allStocks={this.props.allStocks} \n                        newAllStocks={(newAllStocks) => { console.log(newAllStocks); this.newAllStocksHandler(newAllStocks)}} \n                        newMyStocks={this.props.newMyStocks} />\n                }\n            </div>\n        )\n    }\n}\n\nexport default AddStocks;","import React from 'react';\nimport './HorizontalLine.css';\n\nconst HorizontalLine = () => {\n    return (\n        <div className='HorizontalLine'></div>\n    )\n}\n\nexport default HorizontalLine;","import React from 'react';\n\nconst Backdrop = () => {\n    return (\n        <div style={{'width':'100%', 'height': '100%', 'backgroundColor': 'rgba(0,0,0,0.5)', 'zIndex': 100, 'position':'fixed','left': 0,'top': 0}}></div>\n    )\n}\n\nexport default Backdrop;","import React, { Component } from 'react';\nimport './Modal.css';\n\nimport Backdrop from './../Backdrop/Backdrop';\n\nclass Modal extends Component {\n    render() {\n        return (\n            <div>\n                <Backdrop />\n                <span className='Close' onClick={this.props.close}>X</span>\n                <div style={{height:'350px', textAlign:'center', position:'fixed', backgroundColor:'#fff', zIndex: 500, left: '15%', top: '10%', boxSizing: 'border-box', width: '70%', overflowY: 'scroll'}}>\n                    <h2>{this.props.title}</h2>\n                    {this.props.content}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport './Main.css';\n\nimport Navbar from './../../components/Navbar/Navbar';\nimport MyStocks from './../../components/MyStocks/MyStocks';\nimport AddStocks from './../../components/AddStocks/AddStocks';\nimport HorizontalLine from './../../common/HorizontalLine/HorizontalLine';\nimport Modal from './../../common/Modal/Modal';\n\nimport Axios from 'axios';\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        this.NoOfShares = React.createRef();\n        this.BuyingPrice = React.createRef();\n        this.BuyingDate = React.createRef();\n    }\n\n    state = {\n        myStocks: {},\n        allStocks: {},\n        showModal: false,\n        selectedStock: {},\n        dateError: false,\n        dateErrorMsg: null,\n        formComplete: false,\n        formIncompleteError: false\n    }\n\n    componentDidMount() {\n        Axios.get('https://finance-portfolio-tracker.firebaseio.com/allStocksValue.json')\n            .then(response => {\n                let allStocks = response.data;\n                Axios.get('https://finance-portfolio-tracker.firebaseio.com/myStocksValue.json')\n                .then(response => {\n                    this.setState({\n                        myStocks: response.data,\n                        allStocks: allStocks\n                    })\n                })\n            })\n            .catch(error => {console.log(error)});\n    }\n\n    addStockHandler = (stock) => {\n        let selectedStock = {};\n        selectedStock.symbol = stock.symbol;\n        selectedStock.name = stock.name;\n\n        this.setState({\n            showModal: true,\n            selectedStock: selectedStock\n        })\n    }\n    \n    modalCloseHandler = () => {this.setState({showModal: false})};\n\n    addStockToDBHandler = () => {\n        if(this.BuyingPrice.current.value.length === 0 && this.BuyingDate.current.value.length === 0 && this.NoOfShares.current.value.length === 0) {\n            this.setState({\n                formComplete: false,\n                formIncompleteError: true\n            })\n        } else {\n            let selectedStock = {...this.state.selectedStock};\n            selectedStock.closingPrice = this.BuyingPrice.current.value;\n            selectedStock.date = this.BuyingDate.current.value;\n            selectedStock.numberOfShares = this.NoOfShares.current.value;\n\n            Axios.post('https://finance-portfolio-tracker.firebaseio.com/myStocksValue.json', selectedStock)\n            .then(response => {\n                let allStocks = {...this.state.allStocks};\n                let newAllStocks = [];\n                for(let value in allStocks) {\n                    if(allStocks[value].symbol !== this.state.selectedStock.symbol) {\n                        newAllStocks.push(allStocks[value]);\n                    }\n                }\n\n                let newMyStocks = {};\n\n                Axios.get('https://finance-portfolio-tracker.firebaseio.com/myStocksValue.json')\n                    .then(response => {\n                        newMyStocks = response.data;\n\n                        Axios.put('https://finance-portfolio-tracker.firebaseio.com/allStocksValue.json', newAllStocks)\n                            .then(response => {\n                                this.setState({\n                                    selectedStock: {},\n                                    showModal: false,\n                                    allStocks: newAllStocks,\n                                    myStocks: newMyStocks\n                                })\n                            }).catch(error => {console.log(error)});\n                    }).catch(error => {console.log(error)});\n\n            }).catch(error => {console.log(error)});\n\n        }\n        \n    }\n\n    dateHandler = (event) => {\n        if(new Date(event.target.value).getDay() === 0 || new Date(event.target.value).getDay() === 6) {\n            this.setState({\n                dateError: true,\n                dateErrorMsg: 'You cannot select a weekend date'\n            })\n        } else if(new Date(event.target.value).getTime() >  new Date().getTime()) {\n            this.setState({\n                dateError: true,\n                dateErrorMsg: 'You cannot select a future date'\n            })\n        } else {\n            this.setState({\n                dateError: false,\n                dateErrorMsg: null\n            })\n        }\n    }\n\n    stopTrackingHandler = (symbol) => {\n        let myStocks = this.state.myStocks;\n        let newMyStocks = {};\n        let newAllStocksValue = {};\n        for(let stock in myStocks) {\n            if(myStocks[stock].symbol !== symbol) {\n                newMyStocks[stock] = (myStocks[stock]);\n            } else {\n                newAllStocksValue.name = myStocks[stock].name;\n                newAllStocksValue.symbol = myStocks[stock].symbol;\n            }\n        }\n        let newAllStocks = this.state.allStocks;\n        newAllStocks.push(newAllStocksValue);\n        Axios.put('https://finance-portfolio-tracker.firebaseio.com/allStocksValue.json', newAllStocks)\n            .then(response => response)\n            .catch(error => {console.log(error)})\n        Axios.put('https://finance-portfolio-tracker.firebaseio.com/myStocksValue.json', newMyStocks)\n            .then(response => response)\n            .catch(error => {console.log(error)})\n        this.setState({\n            allStocks: newAllStocks,\n            myStocks: newMyStocks\n        })\n    }\n\n    render() {\n        let today = new Date();\n        let modalContent = this.state.showModal ?\n            (\n                <React.Fragment>\n                    {this.state.formIncompleteError ? <p>Kindly complete the form before adding this stock for tracking.</p> : null}\n                    <div className='AddStockForm'>\n                        <div className='FormRow'><span className='Label'>Company Name:</span><span>{this.state.selectedStock.name}</span></div>\n                        <div className='FormRow'><span className='Label'>No. of Shares:</span><input type='number' min=\"1\" placeholder='No. of shares' ref={this.NoOfShares} /></div>\n                        <div className='FormRow'><span className='Label'>Buy Price:</span> <input type='number' min=\"1\" placeholder='Buying Price' ref={this.BuyingPrice} /></div>\n                        <div className='FormRow'><span className='Label'>Buy Date:</span>{this.state.dateError ? <span>{this.state.dateErrorMsg}</span> : null}<input type='date' onChange={this.dateHandler} ref={this.BuyingDate} /></div>\n                    </div>\n                    <button className='AddButton' disabled={this.state.formComplete} onClick={this.addStockToDBHandler}>Add</button>\n                </React.Fragment>\n            )\n        : null;\n\n        let weekendWarning = (\n            today.getDay() === 0 || today.getDay() === 7 ?\n            <p>*Since today is a weekend, the current price refers to the last updated working day price.</p> :\n            null \n        )\n        return (\n            <div>\n                { \n                    this.state.showModal ? \n                    <Modal \n                        title={'Add '+this.state.selectedStock.name+' to My Stocks'}\n                        content={modalContent}\n                        close={this.modalCloseHandler}/> : \n                    null \n                }\n                {weekendWarning}\n                <Navbar title=\"Finance Portfolio Tracker\" />\n                <MyStocks myStocks={this.state.myStocks} stopTracking={this.stopTrackingHandler} />\n                <HorizontalLine />\n                {\n                    Object.keys(this.state.myStocks).length < 6 ?\n                    <AddStocks allStocks={this.state.allStocks} addStock={this.addStockHandler} /> :\n                    <AddStocks error={'You can add only 5 stocks for tracking!'} />\n                }\n            </div>\n        )\n    }\n}\n\nexport default Main;","import React from 'react';\nimport './App.css';\n\nimport Main from './pages/Main/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}